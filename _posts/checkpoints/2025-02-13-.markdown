---
date:   2025-02-13 16:07:16 +0800
---

看了一点Hugging Face的强化学习教程。

顺着看了一些关于有监督学习、无监督学习、自监督学习的对比的资料。

还看了以太坊关于稳定币的文档。

----

这两天刷到几次关于Rust for Linux开发者和内核DMA模块开发者之间的纠纷。

结合再之前对Rust for Linux进度的关注，我觉得这个事遇到了很大的障碍，大到可以不破不立的程度。

这对应的点子就是从头用Rust实现一个Linux兼容的操作系统。兼容所有系统调用和内核态公共API，实现复用所有现有驱动代码和用户态代码。

> 遵循命名传统就叫Sux吧。（
{: .prompt-tip }

这会很麻烦吗？会是超乎想象的工作量吗？起码工作路线很清楚：对着Linux源码读一遍，然后对应着每一个模块写等价的代码就好。

感觉就算只是见识一下有多大的工作量也是充足的动机。

不过在那之前还是先把编程语言写出来吧。现在就写吧。

----

16点37分。顺着重写操作系统的想法去加深了解了一下FUSE。看了内核文档和Wiki页面。

> Vangoor, Bharath Kumar Reddy, Vasily Tarasov, and Erez Zadok. "To {FUSE} or not to {FUSE}: Performance of {User-Space} file systems." 15th USENIX Conference on File and Storage Technologies (FAST 17). 2017.